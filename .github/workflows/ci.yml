name: CI

on:
  push:
    branches:
      - main
      - feature/ci
  pull_request:
    branches:
      - main
      - feature/ci

jobs:
  lint-and-type-check:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: ⚙️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🧹 Run ESLint
      run: npm run lint

    - name: 🔍 Run TypeScript checking
      run: npm run type-check

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: ⚙️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🏗️ Build for production
      run: npm run build

  api-tests:
    name: Run API Tests
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, build]

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: ⚙️ Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🏗️ Build application
      run: npm run build

    - name: 🚀 Start Next.js production server
      run: npm run start &

    - name: ⏳ Wait for server to be ready
      run: |
        for i in {1..60}; do
          if curl -f http://localhost:3000/api/nether-address?x=0&z=0 >/dev/null 2>&1; then
            echo "✅ Server is ready"
            sleep 10
            break
          fi
          echo "⏳ Waiting for server... ($i/60)"
          sleep 5
        done

    - name: 🧪 Run API unit tests
      run: npm test -- tests/api.test.ts

    - name: 🔗 Run API integration tests
      run: npm test -- tests/integration.test.ts

#    - name: 📊 Run all tests with coverage
#      run: npm run test:coverage

#    - name: 📈 Upload coverage reports
#      uses: codecov/codecov-action@v3
#      with:
#        files: ./coverage/lcov.info
#        fail_ci_if_error: false